#!/bin/bash

build() {
	docker pull tinco/run-command-generator:0.1
}

run() {
	command=$(docker run -i -a stdin -a stdout tinco/run-command-generator:0.1)
	# Environment variables we can hard code
	command="$command 
	 -e HOME=/root
	 -e RAILS_ENV=production
	 -e DISCOURSE_DB_SOCKET=
	 -e DISCOURSE_DB_HOST=localhost
	 -e DISCOURSE_DB_PORT=5432
	 -e DISCOURSE_DB_PASSWORD=docker
	 -e DISCOURSE_REDIS_HOST=localhost
	"
	echo "$command"
	#cid=$(eval "$command orchardup/postgresql")
	#address=$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' $cid)
	#echo "{\"ID\": \"$cid\", \"IPAddress\": \"$address\"}"
}

link() {
	echo "Nothing to do."
}

stop() {
	echo "Stopping"
	docker stop $1
	echo "Removing"
	docker rm $1
}

usage() {
    echo "This script controls the container in this directory. It can be run with any of the following commands."
    echo ""
    echo "Usage:"
    echo "    control build                       # Prepare the container"
    echo "    control run                         # Run a container, prints id to stdout"
    echo "    control link <id>                   # Link a container, link options are passed in JSON over stdin "
    echo "    control stop <id>                   # Stop a container"                  
}

COMMAND=$1
shift
case $COMMAND in
    "build")
        build $@
        ;;
    "run")
        run $@
        ;;
    "link")
        link $@
        ;;
    "stop")
        stop $@
        ;;
    *)
        usage
        ;;
esac

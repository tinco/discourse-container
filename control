#!/bin/bash

build() {
	docker pull tinco/run-command-generator:0.1
	docker pull tinco/dynamic-docker-linker:0.0.1
	docker pull tinco/discourse-docker-base:0.0.1
}

run() {
	# read in the configuration
	config=`cat`
	container_name=tinco/discourse-docker-base:0.0.1

	# Save the entrypoint of the container
	entrypoint=$(docker inspect --format '{{ range .ContainerConfig.Entrypoint }}{{.}} {{end}}' $container_name)

	# run the container we want to run, but override the entrypoint
	# so that it just immediately exits
	cid=$(docker run -d --entrypoint=true $container_name)

	# Enable routing on the container
	docker run --entrypoint "sysctl -w net.ipv4.conf.all.route_localnet=1 # dont CMD " $cid
	docker run --entrypoint "sysctl -w net.ipv4.ip_forward=1 # dont CMD " $cid

	# Set up the links on the network bootstrap container
	echo "$config" | docker run --net=container:$cid tinco/dynamic-docker-linker:0.0.2

	command=$(echo "$config" | docker run -i -a stdin -a stdout tinco/run-command-generator:0.1)
	
	#  Reset the entrypoint
	command="$command --entrypoint=\"$entrypoint\""
	
	# Run the container as intended
	cid=$($command $cid)

	# Get its IP Address
	address=$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' $cid)

	# Output the container information
	echo "{\"ID\": \"$cid\", \"IPAddress\": \"$address\"}"
}

link() {
	echo "Nothing to do."
}

stop() {
	echo "Stopping"
	docker stop $1
	echo "Removing"
	docker rm $1
}

usage() {
    echo "This script controls the container in this directory. It can be run with any of the following commands."
    echo ""
    echo "Usage:"
    echo "    control build                       # Prepare the container"
    echo "    control run                         # Run a container, prints id to stdout"
    echo "    control link <id>                   # Link a container, link options are passed in JSON over stdin "
    echo "    control stop <id>                   # Stop a container"                  
}

COMMAND=$1
shift
case $COMMAND in
    "build")
        build $@
        ;;
    "run")
        run $@
        ;;
    "link")
        link $@
        ;;
    "stop")
        stop $@
        ;;
    *)
        usage
        ;;
esac
